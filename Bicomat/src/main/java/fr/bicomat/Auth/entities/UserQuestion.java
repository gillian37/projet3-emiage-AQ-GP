package fr.bicomat.Auth.entities;
// default package
// Generated 8 déc. 2018 05:24:05 by Hibernate Tools 5.2.11.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import fr.bicomat.Auth.entities.UserQuestion;

/**
 * UserQuestion generated by hbm2java
 */
@Entity
@Table(name = "user_question", uniqueConstraints = @UniqueConstraint(columnNames = "question"))
public class UserQuestion implements java.io.Serializable {

	/**
	 * Identifiant de serialisation. 
	 */
	private static final long serialVersionUID = 1L;
	
	/**
	 *  Id de la question.
	 */
	private Integer questionId;

	/**
	 * Libellé de la question.
	 */
	private String question;

	/**
	 * Construteur par défaut.
	 */
	public UserQuestion() {
	}

	/**
	 * Constructeur.
	 * @param question chaine représentant la question.
	 */
	public UserQuestion(String question) {
		this.question = question;
	}

    /**
     * Obtient l'id de la question.
     * @return
     */
	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "question_id", unique = true, nullable = false)
	public Integer getQuestionId() {
		return this.questionId;
	}

	/**
	 * Mise à jour de l'id de la question. 
	 * @param questionId identifiant de la question.
	 */
	public void setQuestionId(Integer questionId) {
		this.questionId = questionId;
	}
    /**
     *  Obtient la question.	
     * @return libellé de la question.
     */
	@Column(name = "question", unique = true, nullable = false, length = 80)
	public String getQuestion() {
		return this.question;
	}

	/**
	 * Mise à jour de la question.
	 * @param question libellé de la question.
	 */
	public void setQuestion(String question) {
		this.question = question;
	}

	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + questionId;
		result = prime * result + ((question == null) ? 0 : question.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof UserQuestion))
			return false;
		UserQuestion other = (UserQuestion) obj;
		if (questionId != other.questionId)
			return false;
		if (question == null) {
			if (other.question != null)
				return false;
		} else if (!question.equals(other.question))
			return false;
		return true;
	}

	@Override
	public String toString() {
		return "UserQuestion [id=" + questionId + ",  type=" + question	+ "]";
	}
}
